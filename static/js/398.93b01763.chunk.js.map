{"version":3,"file":"static/js/398.93b01763.chunk.js","mappings":"8PAIaA,EAAkB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAE1BC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,wBACGF,EAAYG,KAAI,SAAAC,GACf,OACE,0BACG,KACD,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAACC,KAAKP,GAA7C,SACGG,EAAMK,UAHDL,EAAME,GAQnB,KAKN,E,kBCkBD,EArCiB,WACf,OAA4CI,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAsBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,2FACvBJ,GAAa,GADU,mBAGeK,EAAAA,EAAAA,MAHf,OAGfC,EAHe,OAIrBR,EAAkBQ,EAAsBC,SAJnB,gDAMrBL,EAAS,KAAMM,SANM,yBAQrBR,GAAa,GARQ,4EAAH,qDAYtBI,GACD,GAAE,KAKD,gCACGL,IAAa,SAACU,EAAA,EAAD,IACbR,IAAS,uBAAIA,KACd,gBAAKS,MAAO,CAAEC,QAAS,OAAQC,MAAO,QAASC,SAAU,QAAzD,SAAkE,6BAGlE,SAAC5B,EAAD,CAAiBC,YAAaW,MAGnC,C","sources":["components/TrandMoviesList/TrandMoviesList.jsx","components/pages/Home.jsx"],"sourcesContent":["import PropTypes from 'prop-types'\n\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const TrandMoviesList = ({ trandMovies }) => {\n\n  const location = useLocation();\n\n\n  return (\n    <ul>\n      {trandMovies.map(movie => {\n        return (\n          <li  key={movie.id}>\n            {' '}\n            <Link to={`movies/${movie.id}`} state={{from:location}}>\n              {movie.title}\n            </Link>\n          </li>\n        \n        );\n      })}\n\n    </ul>\n   \n  );\n};\n\n\nTrandMoviesList.propTypes = {\n  trandMovies: PropTypes.array.isRequired\n}","import { Loader } from 'components/Loader/Loader';\n\nimport { TrandMoviesList } from 'components/TrandMoviesList/TrandMoviesList';\nimport { useEffect, useState } from 'react';\n\nimport { fetchMovies } from 'services';\n\nconst HomePage = () => {\n  const [trandingMovies, setTrandingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n\n  useEffect(() => {\n    const getTrandingMovie = async () => {\n      setIsLoading(true);\n      try {\n        const fetchedTrandingMovies = await fetchMovies();\n        setTrandingMovies(fetchedTrandingMovies.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getTrandingMovie();\n  }, []);\n\n\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      <div style={{ padding: '24px', color: 'black', fontSize: '24px'}}>\n        Trand Movies for Today:\n      </div>\n      <TrandMoviesList trandMovies={trandingMovies} />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["TrandMoviesList","trandMovies","location","useLocation","map","movie","to","id","state","from","title","useState","trandingMovies","setTrandingMovies","isLoading","setIsLoading","error","setError","useEffect","getTrandingMovie","fetchMovies","fetchedTrandingMovies","results","message","Loader","style","padding","color","fontSize"],"sourceRoot":""}