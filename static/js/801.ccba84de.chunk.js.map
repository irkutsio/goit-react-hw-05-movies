{"version":3,"file":"static/js/801.ccba84de.chunk.js","mappings":"8PAEaA,EAASC,EAAAA,GAAAA,GAAH,2FAONC,EAAYD,EAAAA,GAAAA,IAAH,2DAKTE,EAAUF,EAAAA,GAAAA,IAAH,yHAUPG,EAAQH,EAAAA,GAAAA,IAAH,4C,SCrBLI,EAAgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtBC,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,YAAaC,EAAmCH,EAAnCG,SAAUC,EAAyBJ,EAAzBI,OAAQC,EAAiBL,EAAjBK,aACxCC,EAAaF,GAAUA,EAAOG,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAE7C,OACE,UAACb,EAAD,WACG,KACD,wBAAKK,KACL,yBAAG,WAASI,MACZ,UAACR,EAAD,WACG,KACD,0BACE,gBACEa,IAAG,yCAAoCR,GACvCS,IAAI,cAGR,UAACb,EAAD,YACE,SAACJ,EAAD,UACGY,GACCA,EAAWC,KAAI,SAACC,EAAOI,GAAR,OAAkB,0BAAiBJ,EAAM,MAAdI,EAA3B,OAEnB,uBAAIT,YAKb,E,mCC4BD,EApDqB,WAAO,IAAD,IACzB,GAA0BU,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOb,EAAP,KAAcc,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GAEd,IAAMI,GAAcC,EAAAA,EAAAA,QAAM,oBAACL,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAIjDC,EAAAA,EAAAA,YAAU,WACRC,EAAaX,EACd,GAAE,CAACA,IAEJ,IAAMW,EAAY,mCAAG,WAAMX,GAAN,8EACnBH,GAAa,GADM,mBAGce,EAAAA,EAAAA,IAAgBZ,GAH9B,OAGXa,EAHW,OAIjBlB,EAASkB,GAJQ,gDAMjBd,EAAS,KAAMe,SANE,yBAQjBjB,GAAa,GARI,4EAAH,sDAYlB,OACE,2BACGD,IAAa,SAACmB,EAAA,EAAD,IACbjB,IAAS,yBAAIA,EAAM,QACpB,SAAC,KAAD,CAAMkB,GAAIV,EAAYW,QAAtB,SAA+B,oBAC/B,SAACrC,EAAD,CAAeC,MAAOA,KAEtB,0BACG,KACD,yBACE,SAAC,KAAD,CAAMmC,GAAG,OAAT,SAAgB,qBAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,0BAIvB,SAAC,KAAD,MAGL,C","sources":["components/MovieByIdInfo/MovieByIdInfo.styled.js","components/MovieByIdInfo/MovieByIdInfo.jsx","components/pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Genres = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 8px;\n  padding: 0;\n`;\n\nexport const Container = styled.div`\n  width: 600px;\n  padding: 24px;\n`;\n\nexport const ImgWrap = styled.div`\n  display: flex;\n  gap: 24px;\n  align-items: flex-start;\n\n  img {\n    display: block;\n  }\n`;\n\nexport const Descr = styled.div`\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { Genres, Container, Descr, ImgWrap } from './MovieByIdInfo.styled';\n\nexport const MovieByIdInfo = ({ movie }) => {\n  const { title, poster_path, overview, genres, vote_average } = movie;\n  const genreNames = genres && genres.map(genre => genre.name);\n\n  return (\n    <Container>\n      {' '}\n      <h2>{title}</h2>\n      <p>Rating: {vote_average}</p>\n      <ImgWrap>\n        {' '}\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w400${poster_path}`}\n            alt=\"poster\"\n          />\n        </div>\n        <Descr>\n          <Genres>\n            {genreNames &&\n              genreNames.map((genre, index) => <li key={index}>{genre}/</li>)}\n          </Genres>\n          <p>{overview}</p>\n        </Descr>\n      </ImgWrap>\n    </Container>\n  );\n};\n\nMovieByIdInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MovieByIdInfo } from 'components/MovieByIdInfo/MovieByIdInfo';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMoviesById } from 'services';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  console.log(location)\n\nconst backLinkRef = useRef(location.state?.from ?? '/movie')\n\n\n\n  useEffect(() => {\n    getMovieById(movieId);\n  }, [movieId]);\n\n  const getMovieById = async movieId => {\n    setIsLoading(true);\n    try {\n      const fetchedMovieById = await fetchMoviesById(movieId);\n      setMovie(fetchedMovieById);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p>{error} </p>}\n      <Link to={backLinkRef.current}>â¬… go back</Link>\n      <MovieByIdInfo movie={movie} />\n\n      <ul>\n        {' '}\n        <li>\n          <Link to=\"cast\">see the Cast </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">see all Reviews</Link>\n        </li>\n      </ul>\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Genres","styled","Container","ImgWrap","Descr","MovieByIdInfo","movie","title","poster_path","overview","genres","vote_average","genreNames","map","genre","name","src","alt","index","useState","setMovie","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","console","log","backLinkRef","useRef","state","from","useEffect","getMovieById","fetchMoviesById","fetchedMovieById","message","Loader","to","current"],"sourceRoot":""}